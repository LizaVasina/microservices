{"ast":null,"code":"var _jsxFileName = \"/Users/lizavasina/Desktop/study/microservices/blog/client/src/CommentList.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_TEXTS = {\n  PENDING: 'This comment is awaiting moderation',\n  REJECTED: 'This comment has been rejected'\n};\nexport const CommentList = _ref => {\n  let {\n    comments\n  } = _ref;\n  const renderedComments = comments.map(_ref2 => {\n    let {\n      id,\n      content,\n      status\n    } = _ref2;\n    let text;\n    if (status === 'approved') {\n      text = content;\n    }\n    if (status === 'pending') {\n      text = DEFAULT_TEXTS.PENDING;\n    }\n    if (status === 'rejected') {\n      text = DEFAULT_TEXTS.REJECTED;\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: text\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: renderedComments\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_c = CommentList;\nvar _c;\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"names":["React","DEFAULT_TEXTS","PENDING","REJECTED","CommentList","comments","renderedComments","map","id","content","status","text"],"sources":["/Users/lizavasina/Desktop/study/microservices/blog/client/src/CommentList.js"],"sourcesContent":["import React from \"react\";\n\nconst DEFAULT_TEXTS = {\n    PENDING: 'This comment is awaiting moderation',\n    REJECTED: 'This comment has been rejected'\n}\n\nexport const CommentList = ({ comments }) => {\n    const renderedComments = comments.map(({ id, content, status }) => {\n        let text;\n\n        if (status === 'approved') {\n            text = content;\n        }\n\n        if (status === 'pending') {\n            text = DEFAULT_TEXTS.PENDING\n        }\n        \n        if (status === 'rejected') {\n            text = DEFAULT_TEXTS.REJECTED\n        }\n\n        return <li key={id}>{text}</li>\n    })\n\n    return (\n        <ul>\n            {renderedComments}\n        </ul>\n    )\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,aAAa,GAAG;EAClBC,OAAO,EAAE,qCAAqC;EAC9CC,QAAQ,EAAE;AACd,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,QAAkB;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACpC,MAAMC,gBAAgB,GAAGD,QAAQ,CAACE,GAAG,CAAC,SAA6B;IAAA,IAA5B;MAAEC,EAAE;MAAEC,OAAO;MAAEC;IAAO,CAAC;IAC1D,IAAIC,IAAI;IAER,IAAID,MAAM,KAAK,UAAU,EAAE;MACvBC,IAAI,GAAGF,OAAO;IAClB;IAEA,IAAIC,MAAM,KAAK,SAAS,EAAE;MACtBC,IAAI,GAAGV,aAAa,CAACC,OAAO;IAChC;IAEA,IAAIQ,MAAM,KAAK,UAAU,EAAE;MACvBC,IAAI,GAAGV,aAAa,CAACE,QAAQ;IACjC;IAEA,oBAAO;MAAA,UAAcQ;IAAI,GAATH,EAAE;MAAA;MAAA;MAAA;IAAA,QAAa;EACnC,CAAC,CAAC;EAEF,oBACI;IAAA,UACKF;EAAgB;IAAA;IAAA;IAAA;EAAA,QAChB;AAEb,CAAC;AAAA,KAxBYF,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}